/**
 * File:	packager/inst_dir/instintodir.ycp
 * Module:	System installation
 * Summary:	Installation into  a directory
 * Authors:	Anas Nashif <nashif@suse.de>
 *
 * $Id$
 *
 */

{
    textdomain "dirinstall";

    import "Mode";
    Mode::SetMode ("autoinst_config");	// FIXME, messy
    import "Product";
    Mode::SetMode ("normal");		// FIXME, messy
    import "DirInstall";
    import "ProductControl";

    import "Installation";

    import "Wizard";
    import "Report";
    import "Progress";

define symbol Run () {
    y2milestone("current mode: %1", Mode::mode());
    DirInstall::InitProductControl ();
    Installation::dirinstall_installing_into_dir = true;

    Progress::NextStage();

    // check the package manager target
    Pkg::TargetFinish ();
    string tmpdir = (string)SCR::Read (.target.tmpdir);
    tmpdir = tmpdir + "/target";
    SCR::Execute (.target.mkdir, tmpdir);
    Pkg::TargetInit (tmpdir, true);

    string wizard_mode = Mode::test () ? "installation" : Mode::mode ();

    list<map> stage_mode = [$["stage": "normal",  "mode": wizard_mode ]];
    ProductControl::AddWizardSteps(stage_mode);

    // Do log Report messages by default (bug 180862)
    Report::LogMessages(true);
    Report::LogErrors(true);
    Report::LogWarnings(true);

    // calling inst_proposal

    Installation::destdir = DirInstall::GetTarget();
    y2debug("target dir: %1", Installation::destdir);

    symbol ret = ProductControl::Run();

    if (DirInstall::GetStarted())
    {
	// display a progress during exit
	list<string> stages =
	[
	    // progress bar item
	    _("Finish the Software Manager"),
	    // progress bar item
	    _("Clean Up"),
	];

	list<string> stages2 =
	[
	    // progress bar item
	    _("Finishing the Software Manager..."),
	    // progress bar item
	    _("Cleaning Up..."),
	];

	// progres bar label
	Progress::New (_("Finishing..."), " ", size(stages) - 1,
		// progres bar label
		stages, stages2, _("Please wait..."));

	Progress::NextStage();

	Pkg::SourceFinishAll ();
	Pkg::TargetFinish();
    }

    Installation::destdir = "/";

    return ret;
}


} // EOF
