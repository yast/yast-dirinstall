/**
 * Module:	dirinstall_options_proposal.ycp
 *
 * Author:	Anas Nashif <nashif@suse.de>
 *
 * Purpose:     Proposal for dirinstall options
 *
 * $Id$
 *
 */
{
    textdomain "packager";

    import "DirInstall";
    import "HTML";

    string func  = (string) WFM::Args(0);
    map    param = (map) WFM::Args(1);
    map    ret   = $[];

    if ( func == "MakeProposal" )
    {
	boolean force_reset      = param["force_reset"     ]:false;
	boolean language_changed = param["language_changed"]:false;

	// call some function that makes a proposal here:
	//
	// DummyMod::MakeProposal( force_reset );


	if (force_reset)
	{
	    DirInstall::SetTarget("/var/tmp/dirinstall");
            DirInstall::runme_at_boot = false;
	}

	list<string> tmp = [];
        string color = "red";

	ret = $[ "preformatted_proposal" : DirInstall::Propose()
	];
    }
    else if ( func == "AskUser" )
    {
	boolean has_next = param["has_next"]:false;

	// call some function that displays a user dialog
	// or a sequence of dialogs here:
	//

	symbol result = (symbol) WFM::CallFunction ("dirinstall_options", [true, has_next]);

	// Fill return map

	ret = $[ "workflow_sequence" : result ];
    }
    else if ( func == "Description" )
    {
	// Fill return map.
	//
	// Static values do just nicely here, no need to call a function.

	ret =
	    $[
	      // this is a heading
	      "rich_text_title"	:	_("Options"),
	      // this is a menu entry
	      "menu_title"	:	_("&Options"),
	      "id"		:	"dirinstall_options_stuff"
	    ];
    }

    return ret;
}
