/**
 * Module:	inst_dirinstall.ycp
 *
 * Authors:	Anas Nashif<nashif@suse.de>
 *
 * Purpose:	Install into directory
 *
 * $Id$
 */

{
    textdomain "packager";

    import "DirInstall";
    import "Installation";
    import "Directory";
    import "Popup";
    import "SlideShow";
    import "PackageInstallation";
    import "PackageCallbacks";
    import "Wizard";
    import "Progress";
    import "String";

    Pkg::TargetFinish ();
    DirInstall::MountFilesystems ();

    // create /dev/zero and /dev/null devices in the target directory,
    // some packages require them in the postinstall script
    SCR::Execute(.target.bash, sformat("mkdir -p '%1/dev'", String::Quote (DirInstall::GetTarget())));
    SCR::Execute(.target.bash, sformat("mknod -m 666 '%1/dev/zero' c 1 5", String::Quote (DirInstall::GetTarget())));
    SCR::Execute(.target.bash, sformat("mknod -m 666 '%1/dev/null' c 1 3", String::Quote (DirInstall::GetTarget())));

    // initialize the slideshow
    SlideShow::InitPkgData(false);

/*
    if(Pkg::TargetInit (Installation::destdir,true) != true)
    {
	// continue-cancel popup
        if(Popup::ContinueCancel(_("Initializing the target directory failed")) == false)
        {
            return `abort;
        }
    }
*/

    /*
    boolean anyToDelete = Pkg::PkgAnyToDelete();
    SlideShow::SetLanguage (UI::GetLanguage(true));
    SlideShow::InitPkgData();
    SlideShow::OpenSlideShowDialog();

    Pkg::TargetLogfile (Installation::destdir + Directory::logdir + "/y2logRPM");
    list commit_result = PackageInstallation::CommitPackages (0, 0);

    SlideShow::CloseSlideShowDialog();
    */

    return `next;
}
